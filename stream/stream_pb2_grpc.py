# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import stream.stream_pb2 as stream__pb2


class StreamServiceStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.SimpleFun = channel.unary_unary(
        '/stream.StreamService/SimpleFun',
        request_serializer=stream__pb2.RequestData.SerializeToString,
        response_deserializer=stream__pb2.ResponseData.FromString,
        )
    self.ServerSideStreamFun = channel.unary_stream(
        '/stream.StreamService/ServerSideStreamFun',
        request_serializer=stream__pb2.RequestData.SerializeToString,
        response_deserializer=stream__pb2.ResponseData.FromString,
        )
    self.ClientSideStreamFun = channel.stream_unary(
        '/stream.StreamService/ClientSideStreamFun',
        request_serializer=stream__pb2.RequestData.SerializeToString,
        response_deserializer=stream__pb2.ResponseData.FromString,
        )
    self.TwoWayStreamFun = channel.stream_stream(
        '/stream.StreamService/TwoWayStreamFun',
        request_serializer=stream__pb2.RequestData.SerializeToString,
        response_deserializer=stream__pb2.ResponseData.FromString,
        )


class StreamServiceServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def SimpleFun(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def ServerSideStreamFun(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def ClientSideStreamFun(self, request_iterator, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def TwoWayStreamFun(self, request_iterator, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_StreamServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'SimpleFun': grpc.unary_unary_rpc_method_handler(
          servicer.SimpleFun,
          request_deserializer=stream__pb2.RequestData.FromString,
          response_serializer=stream__pb2.ResponseData.SerializeToString,
      ),
      'ServerSideStreamFun': grpc.unary_stream_rpc_method_handler(
          servicer.ServerSideStreamFun,
          request_deserializer=stream__pb2.RequestData.FromString,
          response_serializer=stream__pb2.ResponseData.SerializeToString,
      ),
      'ClientSideStreamFun': grpc.stream_unary_rpc_method_handler(
          servicer.ClientSideStreamFun,
          request_deserializer=stream__pb2.RequestData.FromString,
          response_serializer=stream__pb2.ResponseData.SerializeToString,
      ),
      'TwoWayStreamFun': grpc.stream_stream_rpc_method_handler(
          servicer.TwoWayStreamFun,
          request_deserializer=stream__pb2.RequestData.FromString,
          response_serializer=stream__pb2.ResponseData.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'stream.StreamService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
